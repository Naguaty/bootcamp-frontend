{"version":3,"names":[],"mappings":"","sources":["app.js"],"sourcesContent":["import Navigo from 'navigo';\n\nimport utils from './utils';\nimport settings from './settings';\nimport menu from './menu';\nimport storage from './storage';\nimport ui from './ui';\nimport http from './http';\nimport api from './api';\n\nimport Inicio from './pages/inicio';\nimport Cuentas from './pages/cuentas';\nimport Categorias from './pages/categorias';\nimport Usuarios from './pages/usuarios';\n\nclass Upnify {\n  constructor() {\n    window.addEventListener('load', this.init);\n  }\n\n  tkSesion = null;\n\n  userInfo = {};\n\n  $container = null;\n\n  login = async () => {\n    const html = await http.doHttp({ url: settings.recursos.login, json: false });\n    this.baseHtml(html);\n\n    const $btnLogin = document.querySelector('#btn-login');\n    $btnLogin.onclick = this.doLogin;\n  };\n\n  doLogin = async () => {\n    const values = utils.getFormValues('#frm-login');\n    const { correo, contrasenia } = values;\n\n    if (!correo && !contrasenia) {\n      return false;\n    }\n\n    try {\n      const res = await http.doHttp({\n        method: 'POST',\n        url: api.auth.login,\n        payload: values,\n        includeSesion: false,\n      });\n      const { token, ...userInfo } = res;\n\n      storage.set('token', token);\n      storage.set('userInfo', userInfo);\n      this.userInfo = userInfo;\n\n      await this.app();\n      return true;\n    } catch (error) {\n      const $floatingPassword = document.querySelector('#floatingPassword');\n      $floatingPassword.classList.add('is-invalid');\n      $floatingPassword.focus();\n      const $loginFeedback = document.querySelector('#login-feedback');\n      $loginFeedback.innerHTML = error.msg;\n      return false;\n    }\n  };\n\n  app = async () => {\n    const { nombre, apellidos, correo } = this.userInfo;\n    const html = await http.doHttp({ url: settings.recursos.app, json: false });\n    this.baseHtml(html);\n    const $userName = document.querySelector('#user-name');\n    $userName.innerHTML = `<p class=\"m-0\">${nombre} ${apellidos}</p><p class=\"m-0 small\"><span class=\"small\">${correo}</span></p>`;\n    menu.init();\n    this.setRoutes();\n  };\n\n  baseHtml = (html) => {\n    const $container = document.querySelector('#app');\n    this.$container = $container;\n    $container.innerHTML = html || ui.loader();\n  };\n\n  logout = async () => {\n    storage.clear();\n    this.router.navigate('/');\n    await this.login();\n  };\n\n  router;\n\n  routes = {\n    '/': Inicio.init,\n    '/login': this.login,\n    '/salir': this.logout,\n    '/inicio': Inicio.init,\n    '/cuentas/:id/:cuenta': Cuentas.detalle,\n    '/cuentas': Cuentas.init,\n    '/categorias': Categorias.init,\n    '/usuarios': Usuarios.init,\n  };\n\n  setRoutes = () => {\n    // console.log('setRoutes', this.routes);\n    this.router = new Navigo('/', { hash: true });\n    this.router.on(this.routes);\n    this.router.notFound(() => {\n      ui.pageContent({ title: '404', body: ui.pageNotFound() });\n    });\n    this.router.resolve();\n    window.appRouter = this.router;\n  };\n\n  init = async () => {\n    this.token = storage.get('token');\n    this.baseHtml();\n    if (this.token) {\n      const userInfo = storage.get('userInfo');\n      this.userInfo = userInfo;\n      await this.app();\n    } else {\n      await this.login();\n      window.history.replaceState({}, '', '/');\n    }\n  };\n}\n\n// eslint-disable-next-line no-unused-vars\nconst upnify = new Upnify();\n"],"file":"../../app.js"}